processor: ClassDynamilizeProcessor (full class name: dynamilize.annoprocessor.ClassDynamilizeProcessor)
time: Fri Aug 11 17:25:00 CST 2023

-----------------------------------------
annotation: dynamilize.annotations.DynamilizeClass
-----------------------------------------

> class: /home/local/IdeaProjects/JavaDynamilizer/usage_sample/src/main/java/com/github/ebwilson/sample_zh/HintAspect.java
 1| package com.github.ebwilson.sample_zh;
 2| 
 3| import dynamilize.JavaHandleHelper;
 4| import dynamilize.annotations.DynamilizeClass;
 5| 
 6| @DynamilizeClass
 7| public abstract class HintAspect implements DynamilizeClass.DynamilizedClass<Object> {
 8|     
 9|     public HintAspect() {
10|         super();
11|     }
12|     @dynamilize.runtimeannos.Exclude
13|     private static final JavaHandleHelper $helper$ = null;
14|     public static Object lastDisplay;
15|     @dynamilize.runtimeannos.Exclude
16|     public static final java.lang.String NAME = "com.github.ebwilson.sample_zh.HintAspect";
17|     @dynamilize.runtimeannos.Exclude
18|     public static final dynamilize.DynamicClass INSTANCE = dynamilize.DynamicClass.visit("com.github.ebwilson.sample_zh.HintAspect", com.github.ebwilson.sample_zh.HintAspect.class, null, $helper$);
19|     
20|     public static void display(@dynamilize.runtimeannos.This
21|     dynamilize.DynamicObject<?> self, @dynamilize.runtimeannos.Super
22|     dynamilize.DataPool.ReadOnlyPool sup, Object hint) {
23|         sup.invokeFunc("display", hint);
24|         if (hint instanceof String sglHint) {
25|             Object elem = self.getVar("group").hashCode();
26|             self.setVar("lastDisplay", elem);
27|         }
28|     }
29|     
30|     public static void hide(@dynamilize.runtimeannos.This
31|     dynamilize.DynamicObject<?> self, @dynamilize.runtimeannos.Super
32|     dynamilize.DataPool.ReadOnlyPool sup) {
33|         sup.invokeFunc("hide");
34|         if (self.getVar("lastDisplay") != null) {
35|         }
36|     }
37| }

